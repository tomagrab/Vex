@page "/Tickets/Create"
@attribute [Authorize(Roles = "Admin, Manager, User")]
@rendermode InteractiveServer

<PageTitle>Create Ticket | Vex</PageTitle>

<Div>
    <Form>
        <Validations
            @ref="@ValidationsRef"
            Mode="ValidationMode.Manual"
            Model="@TicketModel"
            ValidateOnLoad="false"
        >
            <Fields>
                <Validation>
                    <Field ColumnSize="ColumnSize.IsHalf">
                        <FieldBody>
                            <Addons>
                                <Addon AddonType="AddonType.Start">
                                    <Tooltip Text=@ContactTooltipText>
                                        <AddonLabel>Contact</AddonLabel>
                                    </Tooltip>
                                </Addon>
                                <Addon AddonType="AddonType.Body">
                                    <TextEdit
                                        @bind-Text="@TicketModel.Contact">
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </TextEdit>
                                </Addon>
                            </Addons>
                        </FieldBody>
                    </Field>
                </Validation>
                <Validation>
                    <Field ColumnSize="ColumnSize.IsHalf">
                        <FieldBody>
                            <Addons>
                                <Addon AddonType="AddonType.Start">
                                    <Tooltip Text=@PhoneTooltipText>
                                        <AddonLabel>Phone</AddonLabel>
                                    </Tooltip>
                                </Addon>
                                <Addon AddonType="AddonType.Body">
                                    <InputMask
                                        @bind-Text="@TicketModel.Phone"
                                        Mask="(999) 999-9999"
                                    >
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </InputMask>
                                </Addon>
                            </Addons>
                        </FieldBody>
                    </Field>
                </Validation>
                <Validation>
                    <Field ColumnSize="ColumnSize.IsHalf">
                        <FieldBody>
                            <Addons>
                                <Addon AddonType="AddonType.Start">
                                    <Tooltip Text=@EmailTooltipText>
                                        <AddonLabel>Email</AddonLabel>
                                    </Tooltip>
                                </Addon>
                                <Addon AddonType="AddonType.Body">
                                    <InputMask
                                        @bind-Text="@TicketModel.Email"
                                        Alias="email"
                                    >
                                        <Feedback>
                                            <ValidationError />
                                        </Feedback>
                                    </InputMask>
                                </Addon>
                            </Addons>
                        </FieldBody>
                    </Field>
                </Validation>
            </Fields>
        </Validations>
        <Button
            Color="Color.Primary"
            Clicked="@OnSaveClicked"
            Type="ButtonType.Submit"
        >
            Validate and Submit
        </Button>
    </Form>
</Div>

@code {
    [Inject] IMessageService MessageService { get; set; }

    Validations ValidationsRef { get; set; }

    private TicketModel TicketModel { get; set; } = new TicketModel();

    #region Tooltips

        private string ContactTooltipText = "The name of the caller";
        private string PhoneTooltipText = "The phone number of the caller";
        private string EmailTooltipText = "The email address of the caller";
        private string CompanyTooltipText = "The company of the caller";
        private string BranchTooltipText = "The branch of the caller";
        private string CategoryTooltipText = "The category of the ticket";
        private string SubcategoryTooltipText = "The subcategory of the ticket";
        private string StatusTooltipText = "The status of the ticket";
        private string PriorityTooltipText = "The priority of the ticket";
        private string DescriptionTooltipText = "The description of the ticket";
        private string AssignedToTooltipText = "The person assigned to this ticket";

    #endregion

    private async Task OnSaveClicked()
    {
        if ( await ValidationsRef.ValidateAll() )
        {
            await MessageService.Info( "Thank you for filling the form." );

            await ValidationsRef.ClearAll();
        }
    }
}